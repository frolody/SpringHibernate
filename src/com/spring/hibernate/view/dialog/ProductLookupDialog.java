/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.spring.hibernate.view.dialog;

import com.spring.hibernate.Main;
import com.spring.hibernate.entity.Product;
import com.spring.hibernate.util.ComponentUtils;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Fadli Hudaya
 */
public class ProductLookupDialog extends javax.swing.JDialog {

    /**
     * Creates new form ProductLookupDialog
     */
    public ProductLookupDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public ProductLookupDialog() {
        super(Main.getMainFrame(), true);
        initComponents();
        setLocationRelativeTo(null);
        productTable.setAutoCreateColumnsFromModel(false);
        productTable.getSelectionModel().addListSelectionListener(new ProductListener());
        list = Main.getProductService().getAll();
        productTable.setModel(new ProductTableModel(list));
    }

    public Product getProduct() {
        setVisible(true);
        return product;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        btnExit1 = new javax.swing.JButton();
        btnExit2 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("Cari :");

        txtCari.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });

        productTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Barang", "Nama Barang", "Harga"
            }
        ));
        productTable.setGridColor(new java.awt.Color(204, 204, 204));
        productTable.setRowHeight(22);
        jScrollPane1.setViewportView(productTable);

        btnExit1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExit1.setText("Batal");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        btnExit2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExit2.setText("OK");
        btnExit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExit2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit1)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExit1, btnExit2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit1)
                    .addComponent(btnExit2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        for (int i = 0; i < productTable.getRowCount(); i++) {
            String val = productTable.getValueAt(i, 0).toString();
            if (val != null && val.startsWith(txtCari.getText())) {
                productTable.getSelectionModel().setSelectionInterval(i, i);
                ComponentUtils.scrollToRect(productTable, i);
                break;
            }
        }
    }//GEN-LAST:event_txtCariKeyReleased

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        product = null;
        dispose();
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void btnExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit2ActionPerformed
        if (product != null) {
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih Salah Satu Barang Terlebih Dahulu !",
                    "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExit2ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnExit2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
    private Product product;
    private List<Product> list;

    private class ProductListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (productTable.getSelectedRow() != -1) {
                product = list.get(productTable.getSelectedRow());
            }
        }

    }

    private class ProductTableModel extends AbstractTableModel {

        private List<Product> listProduct;

        public ProductTableModel(List<Product> listProduct) {
            this.listProduct = listProduct;
        }

        @Override
        public int getRowCount() {
            return listProduct.size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Product p = listProduct.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return p.getId();
                case 1:
                    return p.getName();
                case 2:
                    return p.getPrice();
                default:
                    return null;
            }
        }
    }

}
