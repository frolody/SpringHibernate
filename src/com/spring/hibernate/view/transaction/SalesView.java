/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.spring.hibernate.view.transaction;

import com.spring.hibernate.Main;
import com.spring.hibernate.entity.Product;
import com.spring.hibernate.entity.Sales;
import com.spring.hibernate.entity.SalesDetail;
import com.spring.hibernate.util.TextComponentUtils;
import com.spring.hibernate.view.product.ProductLookupDialog;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Fadli Hudaya
 */
public class SalesView extends javax.swing.JInternalFrame {

    /**
     * Creates new form SalesView
     */
    public SalesView() {
        initComponents();
        salesDetailTable.setAutoCreateColumnsFromModel(false);
        jdcTransaksi.setDate(new Date());
        enableForm(false);
        buttonConfig();
    }

    private void buttonConfig() {
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        btnEdit.setEnabled(false);
        btnCancel.setEnabled(false);
        btnAdd.setEnabled(true);
    }

    private void clearForm() {
        txtIdBarang.setText("");
        txtTotal.setText("");
        jdcTransaksi.setDate(new Date());
        list = new ArrayList<>();
        sales = null;
        salesDetailTable.setModel(new SalesDetailTableModel(list));
    }

    private void enableForm(boolean status) {
        txtIdBarang.setEnabled(status);
        btnBrowseId.setEnabled(status);
        salesDetailTable.setEnabled(status);
        txtId.setEnabled(false);
        jdcTransaksi.setEnabled(false);
        txtTotal.setEnabled(false);
    }

    private boolean validateForm() {
        if (list == null || list.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Transaksi Tidak Boleh Kosong !",
                    "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }

    private void loadFormToModel() {
        sales.setSalesDetails(list);
        sales.setSalesDate(new Date());
        BigDecimal total = BigDecimal.ZERO;
        for (SalesDetail salesDetail : list) {
            total = total.add(salesDetail.getSubtotal());
            salesDetail.setSales(sales);
        }
        sales.setTotalSales(total);
    }

    private void loadModelToForm() {
        list = sales.getSalesDetails();
        salesDetailTable.setModel(new SalesDetailTableModel(list));
        txtTotal.setText(TextComponentUtils.formatNumber(sales.getTotalSales()));
    }

    private void refreshTable() {
        salesDetailTable.setModel(new SalesDetailTableModel(list));
    }

    private void refreshTotalSales() {
        if (list != null && !list.isEmpty()) {
            BigDecimal total = BigDecimal.ZERO;
            for (SalesDetail salesDetail : list) {
                total = total.add(salesDetail.getSubtotal());
            }
            txtTotal.setText("Rp. " + TextComponentUtils.formatNumber(total));
        }
    }

    private void addSalesDetail(Product p) {
        if (p != null) {
            SalesDetail salesDetail = new SalesDetail();
            salesDetail.setProduct(p);
            salesDetail.setPrice(p.getPrice());
            salesDetail.setQuantity(1);
            if (salesDetail.getSubtotal() != null) {
                salesDetail.setSubtotal(salesDetail.getSubtotal().add(p.getPrice()));
            } else {
                salesDetail.setSubtotal(p.getPrice());
            }
            list.add(salesDetail);
            refreshTable();
            refreshTotalSales();
        } else {
            JOptionPane.showMessageDialog(this, "Barang Tidak Ada !",
                    "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdcTransaksi = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        txtIdBarang = new javax.swing.JTextField();
        btnBrowseId = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesDetailTable = new javax.swing.JTable();

        setClosable(true);
        setTitle("Penjualan");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAdd.setText("Tambah");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnSave.setText("Simpan");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExit.setText("Keluar");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnExit1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExit1.setText("Cari");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("ID Transaksi :");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setText("Tanggal :");

        jdcTransaksi.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Kode Barang :");

        txtIdBarang.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtIdBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdBarangActionPerformed(evt);
            }
        });

        btnBrowseId.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBrowseId.setText("...");
        btnBrowseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseIdActionPerformed(evt);
            }
        });

        txtTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Total :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtIdBarang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrowseId))
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotal))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseId)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        salesDetailTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        salesDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Barang", "Nama Barang", "Harga", "Kuantitas", "Subtotal"
            }
        ));
        salesDetailTable.setGridColor(new java.awt.Color(204, 204, 204));
        salesDetailTable.setRowHeight(22);
        jScrollPane1.setViewportView(salesDetailTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExit1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCancel, btnDelete, btnEdit, btnExit, btnExit1, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnExit)
                    .addComponent(btnExit1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        clearForm();
        enableForm(true);
        //pengaturan tombol
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(false);
        btnEdit.setEnabled(false);
        btnCancel.setEnabled(true);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (sales != null) {
            enableForm(true);
            //pengaturan tombol
            btnDelete.setEnabled(false);
            btnAdd.setEnabled(false);
            btnEdit.setEnabled(false);
            btnCancel.setEnabled(true);
            btnSave.setEnabled(true);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (sales != null) {
            try {
                Main.getSalesService().delete(sales);
                System.out.println("Pass");
                clearForm();
                sales = null;
                refreshTable();
                enableForm(false);
                //pengaturan tombol
                buttonConfig();
            } catch (Exception e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(this, "Data Masih Digunakan ! Tidak Dapat Menghapus Data",
                        "Informasi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (validateForm()) {
            if (sales == null) {
                sales = new Sales();
            }
            loadFormToModel();
            try {
                Main.getSalesService().save(sales);
                clearForm();
                refreshTable();
                enableForm(false);
                //pengaturan tombol
                buttonConfig();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Data Gagal Disimpan !",
                        "Informasi", JOptionPane.INFORMATION_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearForm();
        enableForm(false);
        //pengaturan form
        buttonConfig();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        Main.getMainFrame().salesView = null;
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        Sales s = new SalesLookupDialog().getSales();
        if (s != null) {
            sales = Main.getSalesService().getSales(s.getId());
            loadModelToForm();
            btnDelete.setEnabled(true);
            btnAdd.setEnabled(false);
            btnCancel.setEnabled(true);
            btnEdit.setEnabled(true);
            btnSave.setEnabled(false);
        }
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void btnBrowseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseIdActionPerformed
        Product p = new ProductLookupDialog().getProduct();
        if (p != null) {
            boolean isProductInSalesDetail = false;
            for (SalesDetail s : list) {
                if (s.getProduct().getId().equals(p.getId())) {
                    s.setQuantity(s.getQuantity() + 1);
                    s.setSubtotal(s.getPrice().multiply(new BigDecimal(s.getQuantity())));
                    isProductInSalesDetail = true;
                    break;
                }
            }
            if (isProductInSalesDetail) {
                refreshTable();
                refreshTotalSales();
            } else {
                addSalesDetail(p);
            }
        }
    }//GEN-LAST:event_btnBrowseIdActionPerformed

    private void txtIdBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdBarangActionPerformed
        String productId = txtIdBarang.getText();
        try {
            //cari apakah barang sudah ada dalam tabel sales detail
            Long pId = Long.valueOf(productId);
            boolean isProductInSalesDetail = false;
            for (SalesDetail s : list) {
                if (s.getProduct().getId().equals(pId)) {
                    s.setQuantity(s.getQuantity() + 1);
                    s.setSubtotal(s.getPrice().multiply(new BigDecimal(s.getQuantity())));
                    isProductInSalesDetail = true;
                    break;
                }
            }
            if (isProductInSalesDetail) {
                refreshTable();
                refreshTotalSales();
            } else {
                Product p = Main.getProductService().getProduct(pId);
                if (p != null) {
                    addSalesDetail(p);
                }
            }
            txtIdBarang.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Id Barang Harus Berupa Angka !",
                    "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_txtIdBarangActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        Main.getMainFrame().salesView = null;
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBrowseId;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcTransaksi;
    private javax.swing.JTable salesDetailTable;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdBarang;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
    private List<SalesDetail> list;
    private Sales sales;

    private class SalesDetailTableModel extends AbstractTableModel {

        private List<SalesDetail> listSalesDetail;

        public SalesDetailTableModel(List<SalesDetail> listSales) {
            this.listSalesDetail = listSales;
        }

        @Override
        public int getRowCount() {
            return listSalesDetail.size();
        }

        @Override
        public int getColumnCount() {
            return 5;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            SalesDetail s = listSalesDetail.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return s.getProduct().getId();
                case 1:
                    return s.getProduct().getName();
                case 2:
                    return s.getProduct().getPrice();
                case 3:
                    return s.getQuantity();
                case 4:
                    return s.getSubtotal();
                default:
                    return null;
            }
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            if (columnIndex == 2 || columnIndex == 4) {
                return BigDecimal.class;
            } else if (columnIndex == 3) {
                return Integer.class;
            }
            return String.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 3;
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            SalesDetail s = list.get(rowIndex);
            if (columnIndex == 3) {
                s.setQuantity((Integer) aValue);
                s.setSubtotal(s.getPrice().multiply(new BigDecimal(s.getQuantity())));
                refreshTotalSales();
            }
        }
    }
}
